<?php
// src/Controllers/BotController.php
namespace App\Controllers;

use Telegram\Bot\Api; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤ –ø—Ä–æ–µ–∫—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ irazasyed/telegram-bot-sdk —á–µ—Ä–µ–∑ Composer
// –ï—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥—Ä—É–≥—É—é, –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–ª–∞—Å—Å.

class BotController
{
    protected Api $telegram;
    protected \PDO $pdo;
    protected array $config;
    protected int|string|array $adminChatId;
    protected int|null $adminTopicId = null;

    public function __construct(\PDO $pdo, array $telegramConfig)
    {
        $this->pdo    = $pdo;
        $this->config = $telegramConfig;

        // –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram API
        $this->telegram = new Api($this->config['bot_token']);

        // chat_id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã ‚Äî –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –∏–ª–∏ –º–∞—Å—Å–∏–≤–æ–º
        $this->adminChatId  = $this->config['admin_chat_id'];
        $this->adminTopicId = $this->config['admin_topic_id'] ?? null;
    }

    /**
     * –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–æ–º–∞–Ω–¥.
     */
    public function webhook(): void
    {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å—ë –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (Update) –∏–∑ Telegram
        $update = $this->telegram->getWebhookUpdate();

        // –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if ($message = $update->getMessage()) {
            $this->handleMessage($message);
            return;
        }

        // –ï—Å–ª–∏ —ç—Ç–æ callback_query (–Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ inline-–∫–Ω–æ–ø–∫—É)
        if ($callbackQuery = $update->getCallbackQuery()) {
            $this->handleCallbackData($callbackQuery);
            return;
        }

        // –î—Ä—É–≥–∏–µ —Ç–∏–ø—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, edited_message –∏ –¥—Ä.) –ø–æ–∫–∞ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (Message)
     */
    protected function handleMessage($message): void
    {
        $chatId    = $message->getChat()->getId();
        $text      = trim($message->getText() ?? '');
        $from      = $message->getFrom();
        $telegramId = $from->getId();

        // 1) –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ë–î (–ø–æ telegram_id)
        $user = $this->findUserByTelegramId($telegramId);

        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â—ë –Ω–µ –ø–µ—Ä–µ–¥–∞–ª –∫–æ–Ω—Ç–∞–∫—Ç, –Ω–æ –∂–º—ë—Ç /start –∏–ª–∏ —á—Ç–æ-—Ç–æ –µ—â—ë
        if (!$user) {
            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –∫–æ–Ω—Ç–∞–∫—Ç
            if ($contact = $message->getContact()) {
                $this->handleContact($contact, $chatId, $telegramId);
            } else {
                // –ü—Ä–æ—Å–∏–º –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                $this->requestPhone($chatId);
            }
            return;
        }

        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
        switch (true) {
            case $text === '/start':
                $this->showMainMenu($chatId);
                break;

            case $text === 'üìã –ú–µ–Ω—é':
                $this->sendProductList($chatId);
                break;

            case preg_match('/^–ö–æ–ª-–≤–æ:\s*(\d+)$/u', $text, $qtyMatch):
                $quantity = (int)$qtyMatch[1];
                $this->confirmOrder($chatId, $telegramId, $quantity);
                break;

            case $text === '–î–∞, –∑–∞–∫–∞–∑–∞—Ç—å':
                $this->placeOrder($chatId, $telegramId);
                break;

            case $text === '–û—Ç–º–µ–Ω–∞':
                $this->telegram->sendMessage([
                    'chat_id' => $chatId,
                    'text'    => '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî —Å–Ω–æ–≤–∞ –Ω–∞–∂–º–∏—Ç–µ ¬´üìã –ú–µ–Ω—é¬ª.',
                ]);
                break;

            default:
                $this->telegram->sendMessage([
                    'chat_id' => $chatId,
                    'text'    => '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ù–∞–∂–º–∏—Ç–µ ¬´üìã –ú–µ–Ω—é¬ª –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–∫–∞–∑–∞.',
                    'reply_markup' => json_encode([
                        'keyboard' => [
                            [['text' => 'üìã –ú–µ–Ω—é']],
                        ],
                        'resize_keyboard' => true,
                    ]),
                ]);
                break;
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ callback_query (Inline-–∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º —Ç–æ–≤–∞—Ä–∞)
     */
    protected function handleCallbackData($callbackQuery): void
    {
        $data    = $callbackQuery->getData(); // –Ω–∞–ø—Ä–∏–º–µ—Ä, "choose_3"
        $chatId  = $callbackQuery->getMessage()->getChat()->getId();
        $telegramId = $callbackQuery->getFrom()->getId();

        if (preg_match('/^choose_(\d+)$/', $data, $m)) {
            $productId = (int)$m[1];
            $this->askQuantity($chatId, $productId);
        }

        // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º Telegram, —á—Ç–æ–±—ã –Ω–µ –≤–∏—Å–µ–ª–æ ¬´—á–∞—Å–∏–∫–∏¬ª
        $this->telegram->answerCallbackQuery([
            'callback_query_id' => $callbackQuery->getId(),
        ]);
    }

    /**
     * –ü—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º (–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞)
     */
    protected function requestPhone(int $chatId): void
    {
        $keyboard = [
            'keyboard' => [
                [['text' => '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º', 'request_contact' => true]],
            ],
            'resize_keyboard' => true,
            'one_time_keyboard' => true,
        ];

        $this->telegram->sendMessage([
            'chat_id'      => $chatId,
            'text'         => '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞.',
            'reply_markup' => json_encode($keyboard),
        ]);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞ (contact) ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
     */
    protected function handleContact($contact, int $chatId, int $telegramId): void
    {
        $phone = $contact->getPhoneNumber();
        $firstName = $contact->getFirstName() ?: '–ö–ª–∏–µ–Ω—Ç';

        // 1) –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º
        $stmt = $this->pdo->prepare("SELECT id, telegram_id FROM users WHERE phone = ?");
        $stmt->execute([$phone]);
        $existing = $stmt->fetch(\PDO::FETCH_ASSOC);

        if ($existing && (int)$existing['telegram_id'] !== $telegramId) {
            // –¢–µ–ª–µ—Ñ–æ–Ω —É–∂–µ –∑–∞–Ω—è—Ç
            $this->telegram->sendMessage([
                'chat_id' => $chatId,
                'text'    => '–≠—Ç–æ—Ç –Ω–æ–º–µ—Ä —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.',
            ]);
            return;
        }

        if (!$existing) {
            // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ users
            $stmtIns = $this->pdo->prepare("INSERT INTO users (name, phone, telegram_id, role) VALUES (?, ?, ?, 'client')");
            $stmtIns->execute([$firstName, $phone, $telegramId]);
            $userId = (int)$this->pdo->lastInsertId();
        } else {
            // –û–±–Ω–æ–≤–ª—è–µ–º telegram_id —É —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            $stmtUpd = $this->pdo->prepare("UPDATE users SET telegram_id = ? WHERE id = ?");
            $stmtUpd->execute([$telegramId, (int)$existing['id']]);
            $userId = (int)$existing['id'];
        }

        // –°–æ–æ–±—â–∞–µ–º, —á—Ç–æ –Ω–æ–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω—ë–Ω, –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        $this->telegram->sendMessage([
            'chat_id' => $chatId,
            'text'    => '–ù–æ–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω—ë–Ω! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–∂–∞–≤ ¬´üìã –ú–µ–Ω—é¬ª.',
            'reply_markup' => json_encode([
                'keyboard' => [
                    [['text' => 'üìã –ú–µ–Ω—é']],
                ],
                'resize_keyboard' => true,
            ]),
        ]);
    }

    /**
     * –í—ã–≤–æ–¥ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ /start –∏–ª–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
     */
    protected function showMainMenu(int $chatId): void
    {
        $this->telegram->sendMessage([
            'chat_id' => $chatId,
            'text'    => "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ BerryGo! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            'reply_markup' => json_encode([
                'keyboard' => [
                    [['text' => 'üìã –ú–µ–Ω—é'], ['text' => 'üõí –ú–æ–∏ –∑–∞–∫–∞–∑—ã']],
                ],
                'resize_keyboard' => true,
            ]),
        ]);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ë–î
     */
    protected function sendProductList(int $chatId): void
    {
        // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤ ProductsController —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –º–µ—Ç–æ–¥ getAllActive()
        $productsController = new ProductsController($this->pdo);
        $products = $productsController->getAllActive(); // –í–µ—Ä–Ω—ë—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤/–º–∞—Å—Å–∏–≤–æ–≤ —Å id, variety, price, unit, image_path

        foreach ($products as $product) {
            $text  = "{$product['id']}. {$product['variety']} ‚Äî {$product['price']}‚ÇΩ/{$product['unit']}";
            $photo = $product['image_path'] ?? null;

            if ($photo) {
                $this->telegram->sendPhoto([
                    'chat_id' => $chatId,
                    'photo'   => $photo,
                    'caption' => $text . "\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å.",
                    'reply_markup' => json_encode([
                        'inline_keyboard' => [
                            [['text' => "–í—ã–±—Ä–∞—Ç—å #{$product['id']}", 'callback_data' => "choose_{$product['id']}"]]
                        ],
                    ]),
                ]);
            } else {
                $this->telegram->sendMessage([
                    'chat_id' => $chatId,
                    'text'    => $text . "\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å.",
                    'reply_markup' => json_encode([
                        'inline_keyboard' => [
                            [['text' => "–í—ã–±—Ä–∞—Ç—å #{$product['id']}", 'callback_data' => "choose_{$product['id']}"]]
                        ],
                    ]),
                ]);
            }
        }
    }

    /**
     * –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (–≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö)
     */
    protected function askQuantity(int $chatId, int $productId): void
    {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥ –∏ product_id –≤ —Å–µ—Å—Å–∏—é
        $_SESSION['bot'][$chatId]['step']      = 'await_qty';
        $_SESSION['bot'][$chatId]['product_id']= $productId;

        $this->telegram->sendMessage([
            'chat_id' => $chatId,
            'text'    => "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (–≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö) –¥–ª—è —Ç–æ–≤–∞—Ä–∞ #{$productId}, –Ω–∞–ø—Ä–∏–º–µ—Ä ¬´–ö–æ–ª-–≤–æ: 2¬ª.",
            'reply_markup' => json_encode([
                'keyboard' => [
                    [['text' => '–û—Ç–º–µ–Ω–∞']],
                ],
                'one_time_keyboard' => true,
                'resize_keyboard'   => true,
            ]),
        ]);
    }

    /**
     * –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É)
     */
    protected function confirmOrder(int $chatId, int $telegramId, int $quantity): void
    {
        // –î–æ—Å—Ç–∞—ë–º product_id, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –≤ —Å–µ—Å—Å–∏–∏
        $productId = $_SESSION['bot'][$chatId]['product_id'] ?? null;
        if (!$productId) {
            // –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –Ω–µ—Ç product_id ‚Äî –ø—Ä–æ—Å–∏–º –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞
            $this->telegram->sendMessage([
                'chat_id' => $chatId,
                'text'    => '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–æ–≤–∞ –Ω–∞–∂–º–∏—Ç–µ ¬´üìã –ú–µ–Ω—é¬ª.',
            ]);
            return;
        }

        // –ë–µ—Ä—ë–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥—É–∫—Ç–µ
        $productsController = new ProductsController($this->pdo);
        $product = $productsController->find($productId); // –¥–æ–ø—É—Å—Ç–∏–º, –≤–µ—Ä–Ω—ë—Ç ['id'=>.., 'variety'=>.., 'price'=>.., 'unit'=>..]

        $sum = $product['price'] * $quantity;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ –≤ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        $_SESSION['bot'][$chatId]['quantity'] = $quantity;
        $_SESSION['bot'][$chatId]['sum']      = $sum;

        $text = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑:\n\n".
                "‚Ä¢ –¢–æ–≤–∞—Ä: {$product['variety']}\n".
                "‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {$quantity} {$product['unit']}\n".
                "‚Ä¢ –°—É–º–º–∞: {$sum} —Ä—É–±.\n\n".
                "–ù–∞–∂–º–∏—Ç–µ ¬´–î–∞, –∑–∞–∫–∞–∑–∞—Ç—å¬ª –∏–ª–∏ ¬´–û—Ç–º–µ–Ω–∞¬ª.";

        $this->telegram->sendMessage([
            'chat_id' => $chatId,
            'text'    => $text,
            'reply_markup' => json_encode([
                'keyboard' => [
                    [['text' => '–î–∞, –∑–∞–∫–∞–∑–∞—Ç—å'], ['text' => '–û—Ç–º–µ–Ω–∞']],
                ],
                'one_time_keyboard' => true,
                'resize_keyboard'   => true,
            ]),
        ]);
    }

    /**
     * –§–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë–º –∑–∞–∫–∞–∑ –≤ –ë–î –∏ —É–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
     */
    protected function placeOrder(int $chatId, int $telegramId): void
    {
        // 1) –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Å—Å–∏–∏
        $sessionData = $_SESSION['bot'][$chatId] ?? [];
        $productId   = $sessionData['product_id'] ?? null;
        $quantity    = $sessionData['quantity'] ?? null;
        $sum         = $sessionData['sum'] ?? null;

        if (!$productId || !$quantity || !$sum) {
            $this->telegram->sendMessage([
                'chat_id' => $chatId,
                'text'    => '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —á–µ—Ä–µ–∑ ¬´üìã –ú–µ–Ω—é¬ª.',
            ]);
            return;
        }

        // 2) –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (user_id) –ø–æ telegram_id
        $stmtUser = $this->pdo->prepare("SELECT id FROM users WHERE telegram_id = ?");
        $stmtUser->execute([$telegramId]);
        $userId = (int)$stmtUser->fetchColumn();
        if (!$userId) {
            $this->telegram->sendMessage([
                'chat_id' => $chatId,
                'text'    => '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ.',
            ]);
            return;
        }

        // 3) –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –≤ —Ç–∞–±–ª–∏—Ü–µ users, –ø–æ–ª–µ address_id)
        $stmtAddr = $this->pdo->prepare("SELECT address_id FROM users WHERE id = ?");
        $stmtAddr->execute([$userId]);
        $addressId = (int)$stmtAddr->fetchColumn();
        if (!$addressId) {
            $this->telegram->sendMessage([
                'chat_id' => $chatId,
                'text'    => '–£ –≤–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω –∞–¥—Ä–µ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–π–¥–∏—Ç–µ –≤ –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ —Å–∞–π—Ç–µ –∏ –¥–æ–±–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å.',
            ]);
            return;
        }

        // 4) –°–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ orders
        $stmtOrder = $this->pdo->prepare("
            INSERT INTO orders (user_id, address_id, total_amount, created_at)
            VALUES (?, ?, ?, NOW())
        ");
        $stmtOrder->execute([$userId, $addressId, $sum]);
        $orderId = (int)$this->pdo->lastInsertId();

        // 5) –°–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å –≤ order_items
        // –î–ª—è unit_price –¥–µ–ª–∏–º —Å—É–º–º—É –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        $unitPrice = round($sum / $quantity, 2);
        $stmtItem = $this->pdo->prepare("
            INSERT INTO order_items (order_id, product_id, quantity, unit_price)
            VALUES (?, ?, ?, ?)
        ");
        $stmtItem->execute([$orderId, $productId, $quantity, $unitPrice]);

        // 6) –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É/–≥—Ä—É–ø–ø–µ
        $textAdmin = "üÜï *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑* #{$orderId}:" . PHP_EOL .
                     "‚Ä¢ –ö–ª–∏–µ–Ω—Ç (telegram_id): {$telegramId}" . PHP_EOL .
                     "‚Ä¢ –¢–æ–≤–∞—Ä ID: {$productId}" . PHP_EOL .
                     "‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {$quantity}" . PHP_EOL .
                     "‚Ä¢ –°—É–º–º–∞: {$sum} —Ä—É–±." . PHP_EOL .
                     "[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∞–¥–º–∏–Ω–∫–µ](https://berrygo.ru/admin/orders/{$orderId})";

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –±—ã—Ç—å, admin_chat_id ‚Äî –º–∞—Å—Å–∏–≤, —Ç–æ–≥–¥–∞ —à–ª—ë–º –≤—Å–µ–º
        $params = [
            'text'       => $textAdmin,
            'parse_mode' => 'Markdown',
        ];
        if ($this->adminTopicId !== null) {
            $params['message_thread_id'] = $this->adminTopicId;
        }

        if (is_array($this->adminChatId)) {
            foreach ($this->adminChatId as $chat) {
                $params['chat_id'] = $chat;
                $this->telegram->sendMessage($params);
            }
        } else {
            $params['chat_id'] = $this->adminChatId;
            $this->telegram->sendMessage($params);
        }

        // 7) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
        $this->telegram->sendMessage([
            'chat_id' => $chatId,
            'text'    => "–°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–∫–∞–∑ ‚Ññ{$orderId} –ø—Ä–∏–Ω—è—Ç –∏ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
            'reply_markup' => json_encode([
                'keyboard' => [
                    [['text' => 'üìã –ú–µ–Ω—é'], ['text' => 'üõí –ú–æ–∏ –∑–∞–∫–∞–∑—ã']],
                ],
                'resize_keyboard' => true,
            ]),
        ]);

        // 8) –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–∫–∞–∑—É
        unset($_SESSION['bot'][$chatId]);
    }

    /**
     * –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ users –ø–æ telegram_id
     */
    protected function findUserByTelegramId(int $telegramId): ?array
    {
        $stmt = $this->pdo->prepare("SELECT * FROM users WHERE telegram_id = ?");
        $stmt->execute([$telegramId]);
        $user = $stmt->fetch(\PDO::FETCH_ASSOC);
        return $user ?: null;
    }
}
